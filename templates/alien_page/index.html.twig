{% extends 'base.html.twig' %}

{% block title %}Hello AlienPageController!{% endblock %}

{% block css %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/leaflet/1/leaflet.css" />
    <script src="https://cdn.jsdelivr.net/leaflet/1/leaflet.js"></script>
    <script type='text/javascript' src={{ asset('interactive-map/raphael-min.js') }}></script>
    <script type='text/javascript' src={{ asset('interactive-map/worldmap.js') }}></script>

    <style>
	body {
		font: .88em/1.53em Arial, Helvetica, sans-serif;
		margin: 30px auto;
		color: #999;
	}
	h1 {
		font-size: 1.3em;
		margin: 0 0 10px;
		color: #000;
	}
	h2 {
		font-size: 2.2em;
		line-height: 1.1em;
		margin: 0 0 10px;
		color: #000;
	}
	a {
		color: #69C;
		text-decoration: none;
	}
	a:hover {
		color: #F30;
	}
	p {
		margin: 0 0 10px;
	}
	em {
		font: italic 100% "Times New Roman", Times, serif;
	}
	.credits {
		border-bottom: solid 1px #eee;
		padding-bottom: 10px;
		margin: 0 0 50px;
	}
	#pagewrap {
		margin: 0 auto;
		width: 800px;
		max-width: 94%;
	}

	#map {
		width: 100%;
	}

    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }

    #map-example-container {height: 300px};

	</style>
{% endblock %}

{% block body %}

    <div id="pagewrap">
            <h1 id="location_name">City</h1>
        <div id="map"></div>
        </div>

    <div class="example-wrapper">
    </div>

    <div id="map-example-container"></div>
    <input type="search" id="input-map" class="form-control" placeholder="Where are we going?" />

{% endblock %}

{% block js %}
    <script src="https://cdn.jsdelivr.net/npm/places.js@1.17.1"></script>
    <script>
    (function() {
    var placesAutocomplete = places({
        appId: 'pl6124DJ467I',
        apiKey: 'dac682bc8a0dc7a59f7ada449553bcf9',
        container: document.querySelector('#input-map')
    });

    var map = L.map('map-example-container', {
        scrollWheelZoom: false,
        zoomControl: false
    });

    var osmLayer = new L.TileLayer(
        'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        minZoom: 1,
        maxZoom: 13,
        attribution: 'Map data Â© <a href="https://openstreetmap.org">OpenStreetMap</a> contributors'
        }
    );

    var markers = [];

    map.setView(new L.LatLng(0, 0), 1);
    map.addLayer(osmLayer);

    placesAutocomplete.on('suggestions', handleOnSuggestions);
    placesAutocomplete.on('cursorchanged', handleOnCursorchanged);
    placesAutocomplete.on('change', handleOnChange);
    placesAutocomplete.on('clear', handleOnClear);

    function handleOnSuggestions(e) {
        markers.forEach(removeMarker);
        markers = [];

        if (e.suggestions.length === 0) {
        map.setView(new L.LatLng(0, 0), 1);
        return;
        }

        e.suggestions.forEach(addMarker);
        findBestZoom();
    }

    function handleOnChange(e) {
        markers
        .forEach(function(marker, markerIndex) {
            if (markerIndex === e.suggestionIndex) {
            markers = [marker];
            marker.setOpacity(1);
            findBestZoom();
            } else {
            removeMarker(marker);
            }
        });
    }

    function handleOnClear() {
        map.setView(new L.LatLng(0, 0), 1);
        markers.forEach(removeMarker);
    }

    function handleOnCursorchanged(e) {
        markers
        .forEach(function(marker, markerIndex) {
            if (markerIndex === e.suggestionIndex) {
            marker.setOpacity(1);
            marker.setZIndexOffset(1000);
            } else {
            marker.setZIndexOffset(0);
            marker.setOpacity(0.5);
            }
        });
    }

    function addMarker(suggestion) {
        var marker = L.marker(suggestion.latlng, {opacity: .4});
        marker.addTo(map);
        markers.push(marker);
    }

    function removeMarker(marker) {
        map.removeLayer(marker);
    }

    function findBestZoom() {
        var featureGroup = L.featureGroup(markers);
        map.fitBounds(featureGroup.getBounds().pad(0.5), {animate: false});
    }
    })();
    </script>
{% endblock %}

